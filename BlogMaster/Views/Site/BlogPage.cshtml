@model BlogResponseDto;


@{
    string keywords = "";
    if (Model.Keywords != null)
    {
        foreach(KeywordResponseDto keyword in Model.Keywords)
        {
            keywords += $"{keyword.KeywordNameEn}, {keyword.KeywordNameEs}, ";
        }
    }
        
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Benefits of Learning to Code</title>
    <link href="~/css/bootstrap.min.css" rel="stylesheet" />
    <!-- Meta Description -->
    <meta name="description" content="@(Model.DescriptionEn?.Trim())">

    <!-- Meta Keywords -->
    <meta name="keywords" content="@(keywords)">

</head>
<body>
    @if (ViewBag.SignedIn)
    {
        @await Html.PartialAsync("_SignedInNavigation_PartialView")
    }
    else
    {
        @await Html.PartialAsync("_UnsignedInNavigation_PartialView")
    }
    <div class="container" style="max-width: 750px ">

        <main>
            <article class="mt-5 mb-5">
                <h1>@Model.TitleEn</h1>
                <small>@Model.DescriptionEn</small>
                @(Html.Raw(Model.ArticleEn))
            </article>

            @* add Rating/Comment *@
            <div class="bg-light p-4 mt-5 mb-5 rounded-3 d-flex justify-content-around border">

                <a href="/create-rating?blogId=@(Model.BlogId)&userId=@(ViewBag.UserId != null ? ViewBag.UserId : "")&slug=@(ViewBag.Slug)" class="btn btn-danger m-3 shadow fw-bolder"><i class="fa-solid fa-star fs-3" style="color: white"></i> Rate this article</a>

                <a href="/create-comment?blogId=@(Model.BlogId)&userId=@(ViewBag.UserId != null ? ViewBag.UserId : "")&slug=@(ViewBag.Slug)" class="btn btn-danger m-3 shadow fw-bolder"><i class="fa-solid fa-comment text-white fs-3"></i> Add Comment</a>
            </div>

            @* comment Section *@
            <section class="mb-4">
                <hr>
            <div class="bg-danger-subtle mb-5">
                HERE THERE SHOULD BE A SECTION FOR "NEXT" AND/OR RELATED ARTICLES OR RECOMENDED
            </div>
                <h2>Comments</h2>
                
                @if(Model.CommentsRatings != null && Model.CommentsRatings.Count > 0)
                {
                    foreach(var comment in Model.CommentsRatings)
                    {
                        <div class="card mb-3" style="max-width: 600px">
                            <h6 class="card-header"><i class="fa-solid fa-user me-3 fs-5 bg-white" style="color: #007BFF; border: solid 2px #007BFF; border-radius: 20px; padding: 5px"></i> @(!string.IsNullOrEmpty(comment.UserName) ? comment.UserName : "Iroquois Pliskin")</h6>
                            <div class="card-body">
                                @* stars *@
                                <h6 class="card-title mb-3 fs-6">
                                    <span class="fw-bold">Rating:</span>
                                    @if(comment.RatingScore > 0)
                                    {
                                        @for(int i = 0; i < 6; i++)
                                        {
                                            if (comment.RatingScore > i && comment.RatingScore < i+1)
                                            {
                                                <i class="fa-regular fa-star-half-stroke" style="color: gold"></i>
                                                continue;
                                            } else if(comment.RatingScore > i)
                                            {
                                                <i class="fa-solid fa-star" style="color: gold"></i>
                                                continue;
                                            }else if (i < 5)
                                            {
                                                <i class="fa-regular fa-star" style="color: gold"></i>
                                            
                                            }
                                        }
                                    }
                                    else 
                                    {
                                        <span class=""> Did not rate article</span>
                                    }
                                </h6>
                                @* Comment *@
                                <p class="card-text">@(comment.Message)</p>
                            </div>
                        </div>
                    }
                }


                <div class="card " style="max-width: 600px">
                    <h6 class="card-header"><i class="fa-solid fa-user me-3 fs-5 bg-white" style="color: #007BFF; border: solid 2px #007BFF; border-radius: 20px; padding: 5px"></i> Iroquois Pliskin</h6>
                    <div class="card-body">
                        @* stars *@
                        <h6 class="card-title mb-3 fs-6">
                            <span class="fw-bold">Rating:</span>
                            <i class="fa-solid fa-star" style="color: gold"></i>
                            <i class="fa-solid fa-star" style="color: gold"></i>
                            <i class="fa-solid fa-star" style="color: gold"></i>
                            <i class="fa-regular fa-star-half-stroke" style="color: gold"></i>
                            <i class="fa-regular fa-star" style="color: gold"></i>
                        </h6>
                        @* Comment *@
                        <p class="card-text">This Article was super dope!!</p>
                    </div>
                </div>


            </section>
        </main>

    </div>
    <script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.11.8/dist/umd/popper.min.js"
            integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
            crossorigin="anonymous"></script>
    <script src="~/js/bootstrap.min.js" asp-append-version="true"></script>
    <script>
        const blogImages = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.BlogImages));

        blogImages.sort((a, b) => new Date(a.CreatedDate) - new Date(b.CreatedDate));

        const imageElements = document.getElementsByClassName("blog-image");

        const imageArray = Array.from(imageElements);

        if (blogImages.length > 0 && imageArray.length > 0) {
            for (let i = 0; i < Math.min(blogImages.length, imageArray.length); i++) {
                const imageToAdd = blogImages[i];
                const element = imageArray[i];
                element.src = `data:${imageToAdd.MimeType};base64,${imageToAdd.ImageData}`;
            }
        }
    </script>
    <script src="https://kit.fontawesome.com/@(ViewBag.FontAwesomeKey).js" crossorigin="anonymous"></script>
</body>
</html>