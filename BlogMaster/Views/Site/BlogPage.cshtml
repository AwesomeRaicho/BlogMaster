@model BlogResponseDto;


@{
    string keywords = "";
    if (Model.Keywords != null)
    {
        foreach(KeywordResponseDto keyword in Model.Keywords)
        {
            keywords += $"{keyword.KeywordNameEn}, {keyword.KeywordNameEs}, ";
        }
    }
        
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Benefits of Learning to Code</title>
    <link href="~/css/bootstrap.min.css" rel="stylesheet" />

    <!-- Meta Description -->
    <meta name="description" content="@(Model.DescriptionEn?.Trim())">

    <!-- Meta Keywords -->
    <meta name="keywords" content="@(keywords)">

</head>
<body>
    @if (ViewBag.SignedIn)
    {
        @await Html.PartialAsync("_SignedInNavigation_PartialView")
    }
    else
    {
        @await Html.PartialAsync("_UnsignedInNavigation_PartialView")
    }
    <div class="container" style="max-width: 750px ">

        <main>
            <article class="mt-5 mb-5">
                <h1>@Model.TitleEn</h1>
                <small>@Model.DescriptionEn</small>
                @(Html.Raw(Model.ArticleEn))
            </article>


            @* Recomended *@
            <section>
                <div class="bg-info-subtle mb-3 rounded-4 shadow">
                    <h2 class="fs-2 p-3">Recomended</h2>
                    <div class="row justify-content-center p-3">
                    

                        @for(int i = 0; i < 4; i++)
                        {
                            @* make sure to link through slug *@
                            <div class="col-5 m-2" style="height: 150px">
                                <a href="#" style="text-decoration: none;">
                                        <div class="card text-bg-dark">
                                            <img src="..." class="card-img" alt="..." style="object-fit: cover; height: 100%">
                                            <div class="card-img-overlay">
                                                <h5 class="card-title">Card title</h5>
                                                <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                                            </div>
                                        </div>
                                </a>
                            </div>
                        }

                    @*     @foreach (var recom in ViewBag.Recomendations)
                        {
                            
                            <div class="col-5 m-2" style="height: 150px">
                                <a href="#" style="text-decoration: none;">
                                    <div class="card text-bg-dark">
                                        <img src="@(recom.publicBlogList.ImageView.src)" class="card-img" alt="recom.publicBlogList.ImageView.Filename" style="object-fit: cover; height: 100%">
                                        <div class="card-img-overlay">
                                            <h5 class="card-title">Card title</h5>
                                            <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                                        </div>
                                    </div>
                                </a>
                            </div>
                        } *@


                    </div>

                </div>

            </section>
            <hr>

            @* add Rating/Comment *@
            <div class="p-4 mt-5 mb-2 rounded-3 d-flex justify-content-around">

                <a href="/create-rating?blogId=@(Model.BlogId)&userId=@(ViewBag.UserId != null ? ViewBag.UserId : "")&slug=@(ViewBag.Slug)" class="btn btn-info m-3 shadow fw-bolder text-white"><i class="fa-solid fa-star fs-3" style="color: white"></i> Rate this article</a>

                <a href="/create-comment?blogId=@(Model.BlogId)&userId=@(ViewBag.UserId != null ? ViewBag.UserId : "")&slug=@(ViewBag.Slug)" class="btn btn-info m-3 shadow fw-bolder text-white"><i class="fa-solid fa-comment text-white fs-3"></i> Add Comment</a>
            </div>


            @* comment Section *@
            <section class="mb-4">
                
                <h2>Comments</h2>
                
                @if(Model.CommentsRatings != null && Model.CommentsRatings.Count > 0)
                {
                    foreach(var comment in Model.CommentsRatings)
                    {
                        <div class="d-flex mb-3 justify-content-start align-items-center">
                            <div class="card me-3 flex-grow-1" style="max-width: 600px">

                                <div>

                                    <h6 class="card-header"><i class="fa-solid fa-user me-3 fs-5 bg-white" style="color: #007BFF; border: solid 2px #007BFF; border-radius: 20px; padding: 5px"></i> @(!string.IsNullOrEmpty(comment.UserName) ? comment.UserName : "Iroquois Pliskin")</h6>
                                </div>

                                <div class="card-body">
                                    @* stars *@
                                    <h6 class="card-title fs-6">
                                        <span class="fw-bold">Rating:</span>
                                        @if(comment.RatingScore > 0)
                                        {
                                            @for(int i = 0; i < 6; i++)
                                            {
                                                if (comment.RatingScore > i && comment.RatingScore < i+1)
                                                {
                                                    <i class="fa-regular fa-star-half-stroke" style="color: gold"></i>
                                                } else if(comment.RatingScore > i)
                                                {
                                                    <i class="fa-solid fa-star" style="color: gold"></i>
                                                }else if (i < 5)
                                                {
                                                    <i class="fa-regular fa-star" style="color: gold"></i>
                                                }
                                            }
                                        }
                                        else 
                                        {
                                            <span class="">Not rating</span>
                                        }
                                    </h6>
                                    @* Comment *@
                                    <p class="card-text">@(comment.Message)</p>

                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(ViewBag.UserId) && ViewBag.UserId == comment.UserId.ToString())
                            {
                                <a class="text-white btn btn-danger p-1 fs-4 flex-gr" href="/edit-comment?commentId=@(comment.CommentId)&blogId=@(Model.BlogId)&slug=@(ViewBag.Slug)&userId=@(ViewBag.UserId)" style="width: 50px"><i class="fa-regular fa-pen-to-square"></i></a>
                                
                            }
                        </div>
                    }
                }
            </section>
        </main>

    </div>
    <script src="https://cdn.jsdelivr.net/npm/@@popperjs/core@2.11.8/dist/umd/popper.min.js"
            integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
            crossorigin="anonymous"></script>
    <script src="~/js/bootstrap.min.js" asp-append-version="true"></script>
    <script>
        const blogImages = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.BlogImages));

        blogImages.sort((a, b) => new Date(a.CreatedDate) - new Date(b.CreatedDate));

        const imageElements = document.getElementsByClassName("blog-image");

        const imageArray = Array.from(imageElements);

        if (blogImages.length > 0 && imageArray.length > 0) {
            for (let i = 0; i < Math.min(blogImages.length, imageArray.length); i++) {
                const imageToAdd = blogImages[i];
                const element = imageArray[i];
                element.src = `data:${imageToAdd.MimeType};base64,${imageToAdd.ImageData}`;
            }
        }
    </script>
    <script src="https://kit.fontawesome.com/@(ViewBag.FontAwesomeKey).js" crossorigin="anonymous"></script>
</body>
</html>